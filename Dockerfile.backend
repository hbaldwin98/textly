# Build stage
FROM golang:1.24-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache git

# Copy go mod files first to leverage Docker cache
COPY server/go.mod server/go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY server/ .

# Create a cache directory for Go build cache
RUN mkdir -p /root/.cache/go-build

# Build the application with caching
RUN --mount=type=cache,target=/root/.cache/go-build \
    CGO_ENABLED=0 GOOS=linux go build -o main .

# Final stage
FROM alpine:latest

# Install ca-certificates for HTTPS requests
RUN apk --no-cache add ca-certificates

WORKDIR /root/

# Copy the binary from builder stage
COPY --from=builder /app/main .

# Create directory for PocketBase data
RUN mkdir -p /root/pb_data

# Expose port
EXPOSE 8080

# Command to run
CMD ["./main", "serve", "--http=0.0.0.0:8080"] 